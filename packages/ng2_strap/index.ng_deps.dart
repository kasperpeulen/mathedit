import 'index.dart';
import 'package:angular2/src/core/reflection/reflection.dart' as _ngRef;
import 'accordion/accordion.ng_deps.dart' as i0;
import 'alert/alert.ng_deps.dart' as i1;
import 'buttons/button-radio.ng_deps.dart' as i2;
import 'buttons/button-checkbox.ng_deps.dart' as i3;
import 'datepicker/index.ng_deps.dart' as i4;
import 'dropdown/index.ng_deps.dart' as i5;
import 'carousel/carousel.ng_deps.dart' as i6;
import 'collapse/collapse.ng_deps.dart' as i7;
import 'pagination/pagination.ng_deps.dart' as i8;
import 'progressbar/progressbar.ng_deps.dart' as i9;
import 'rating/rating.ng_deps.dart' as i10;
import 'tabs/tabs.ng_deps.dart' as i11;
import 'timepicker/timepicker.ng_deps.dart' as i12;
import 'tooltip/tooltip.ng_deps.dart' as i13;
import 'typeahead/typeahead.ng_deps.dart' as i14;
import 'position.ng_deps.dart' as i15;
import 'common.ng_deps.dart' as i16;
export 'index.dart';
export 'accordion/accordion.dart';
export 'alert/alert.dart';
export 'buttons/button-radio.dart';
export 'buttons/button-checkbox.dart';
export 'datepicker/index.dart';
export 'dropdown/index.dart';
export 'carousel/carousel.dart';
export 'collapse/collapse.dart';
export 'pagination/pagination.dart';
export 'progressbar/progressbar.dart';
export 'rating/rating.dart';
export 'tabs/tabs.dart';
export 'timepicker/timepicker.dart';
export 'tooltip/tooltip.dart';
export 'typeahead/typeahead.dart';
export 'position.dart';
export 'common.dart';
export 'ng2-bootstrap-config.dart';
var _visited = false;
void initReflector() {
if (_visited) return; _visited = true;
_ngRef.reflector
..registerGetters({'close': (o) => o.close, 'update1': (o) => o.update1, 'onToggle': (o) => o.onToggle, 'numPages': (o) => o.numPages, 'onHover': (o) => o.onHover, 'onLeave': (o) => o.onLeave, 'select': (o) => o.select, 'deselect': (o) => o.deselect, 'onLoading': (o) => o.onLoading, 'onNoResults': (o) => o.onNoResults, 'onSelect': (o) => o.onSelect})
..registerSetters({'templateUrl': (o, v) => o.templateUrl = v, 'closeOthers': (o, v) => o.closeOthers = v, 'accordionTransclude': (o, v) => o.accordionTransclude = v, 'heading': (o, v) => o.heading = v, 'isOpen': (o, v) => o.isOpen = v, 'isDisabled': (o, v) => o.isDisabled = v, 'panelClass': (o, v) => o.panelClass = v, 'type': (o, v) => o.type = v, 'dismissible': (o, v) => o.dismissible = v, 'dismissOnTimeout': (o, v) => o.dismissOnTimeout = v, 'option': (o, v) => o.option = v, 'uncheckable': (o, v) => o.uncheckable = v, 'trueValue': (o, v) => o.trueValue = v, 'falseValue': (o, v) => o.falseValue = v, 'datepickerPopup': (o, v) => o.datepickerPopup = v, 'datepickerMode': (o, v) => o.datepickerMode = v, 'minDate': (o, v) => o.minDate = v, 'maxDate': (o, v) => o.maxDate = v, 'dateDisabled': (o, v) => o.dateDisabled = v, 'activeDate': (o, v) => o.activeDate = v, 'showWeeks': (o, v) => o.showWeeks = v, 'startingDay': (o, v) => o.startingDay = v, 'initDate': (o, v) => o.initDate = v, 'minMode': (o, v) => o.minMode = v, 'maxMode': (o, v) => o.maxMode = v, 'formatDay': (o, v) => o.formatDay = v, 'formatMonth': (o, v) => o.formatMonth = v, 'formatYear': (o, v) => o.formatYear = v, 'formatDayHeader': (o, v) => o.formatDayHeader = v, 'formatDayTitle': (o, v) => o.formatDayTitle = v, 'formatMonthTitle': (o, v) => o.formatMonthTitle = v, 'yearRange': (o, v) => o.yearRange = v, 'shortcutPropagation': (o, v) => o.shortcutPropagation = v, 'autoClose': (o, v) => o.autoClose = v, 'keyboardNav': (o, v) => o.keyboardNav = v, 'dropdownAppendToBody': (o, v) => o.dropdownAppendToBody = v, 'disabled': (o, v) => o.disabled = v, 'interval': (o, v) => o.interval = v, 'noTransition': (o, v) => o.noTransition = v, 'noPause': (o, v) => o.noPause = v, 'noWrap': (o, v) => o.noWrap = v, 'direction': (o, v) => o.direction = v, 'active': (o, v) => o.active = v, 'index': (o, v) => o.index = v, 'collapse': (o, v) => o.collapse = v, 'rotate': (o, v) => o.rotate = v, 'totalItems': (o, v) => o.totalItems = v, 'itemsPerPage': (o, v) => o.itemsPerPage = v, 'maxSize': (o, v) => o.maxSize = v, 'boundaryLinks': (o, v) => o.boundaryLinks = v, 'directionLinks': (o, v) => o.directionLinks = v, 'firstText': (o, v) => o.firstText = v, 'previousText': (o, v) => o.previousText = v, 'nextText': (o, v) => o.nextText = v, 'lastText': (o, v) => o.lastText = v, 'align': (o, v) => o.align = v, 'animate': (o, v) => o.animate = v, 'max': (o, v) => o.max = v, 'value': (o, v) => o.value = v, 'readonly': (o, v) => o.readonly = v, 'titles': (o, v) => o.titles = v, 'stateOn': (o, v) => o.stateOn = v, 'stateOff': (o, v) => o.stateOff = v, 'ratingStates': (o, v) => o.ratingStates = v, 'vertical': (o, v) => o.vertical = v, 'justified': (o, v) => o.justified = v, 'disable': (o, v) => o.disable = v, 'hourStep': (o, v) => o.hourStep = v, 'minuteStep': (o, v) => o.minuteStep = v, 'meridians': (o, v) => o.meridians = v, 'showMeridian': (o, v) => o.showMeridian = v, 'readonlyInput': (o, v) => o.readonlyInput = v, 'mousewheel': (o, v) => o.mousewheel = v, 'arrowkeys': (o, v) => o.arrowkeys = v, 'showSpinners': (o, v) => o.showSpinners = v, 'min': (o, v) => o.min = v, 'content': (o, v) => o.content = v, 'placement': (o, v) => o.placement = v, 'appendToBody': (o, v) => o.appendToBody = v, 'enable': (o, v) => o.enable = v, 'context': (o, v) => o.context = v, 'source': (o, v) => o.source = v, 'editable': (o, v) => o.editable = v, 'focusFirst': (o, v) => o.focusFirst = v, 'inputFormatter': (o, v) => o.inputFormatter = v, 'minLength': (o, v) => o.minLength = v, 'selectOnExact': (o, v) => o.selectOnExact = v, 'popupTemplateUrl': (o, v) => o.popupTemplateUrl = v, 'waitMs': (o, v) => o.waitMs = v, 'optionsLimit': (o, v) => o.optionsLimit = v, 'selectOnBlur': (o, v) => o.selectOnBlur = v, 'focusOnSelect': (o, v) => o.focusOnSelect = v, 'optionField': (o, v) => o.optionField = v, 'async': (o, v) => o.async = v, 'ngTransclude': (o, v) => o.ngTransclude = v})
;
i0.initReflector();
i1.initReflector();
i2.initReflector();
i3.initReflector();
i4.initReflector();
i5.initReflector();
i6.initReflector();
i7.initReflector();
i8.initReflector();
i9.initReflector();
i10.initReflector();
i11.initReflector();
i12.initReflector();
i13.initReflector();
i14.initReflector();
i15.initReflector();
i16.initReflector();
}
